# Generated by Django 4.0.5 on 2022-06-18 20:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Armor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('weight', models.FloatField()),
                ('price', models.IntegerField(help_text='Price in Redanian crowns')),
                ('stopping_power', models.IntegerField()),
                ('availablility', models.CharField(choices=[('E', 'Everywhere'), ('C', 'Common'), ('P', 'Poor'), ('R', 'Rare')], max_length=1)),
                ('reliability', models.IntegerField(null=True)),
                ('enhancement_spots', models.IntegerField(default=0)),
                ('encombrance_value', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArmorOwnership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=150)),
                ('armor', models.ManyToManyField(related_name='characters', through='character.ArmorOwnership', to='character.armor')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('region', models.CharField(choices=[('north', 'The North'), ('nilfgaard', 'Nilfgaard'), ('skellige', 'Skellige'), ('dol_blathanna', 'Dol Blathanna'), ('mahakam', 'Mahakam')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='DefiningSkill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='DiceRoll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_dice', models.IntegerField()),
                ('number_of_sides', models.IntegerField()),
                ('modifier', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Effect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=50)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Gear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('weight', models.FloatField()),
                ('price', models.IntegerField(help_text='Price in Redanian crowns')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Impact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('costs_double', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=50)),
                ('abbreviated_label', models.CharField(max_length=5)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ToolKit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('weight', models.FloatField()),
                ('price', models.IntegerField(help_text='Price in Redanian crowns')),
                ('concealment', models.CharField(choices=[('T', 'Tiny'), ('S', 'Small'), ('L', 'Large'), ('N', 'Cannot hide')], max_length=1)),
                ('availablility', models.CharField(choices=[('E', 'Everywhere'), ('C', 'Common'), ('P', 'Poor'), ('R', 'Rare')], max_length=1)),
                ('impacts', models.ManyToManyField(to='character.impact')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField(null=True)),
                ('weight', models.FloatField()),
                ('price', models.IntegerField(help_text='Price in Redanian crowns')),
                ('damage_type', models.CharField(choices=[('S', 'Slashing'), ('P', 'Piercing'), ('B', 'Bludgeoning'), ('E', 'Elemental')], max_length=1)),
                ('accuracy', models.IntegerField()),
                ('availablility', models.CharField(choices=[('E', 'Everywhere'), ('C', 'Common'), ('P', 'Poor'), ('R', 'Rare')], max_length=1)),
                ('reliability', models.IntegerField()),
                ('hands_required', models.IntegerField(choices=[(1, 'One-handed'), (2, 'Two-handed')])),
                ('enhancement_spots', models.IntegerField(default=0)),
                ('range', models.CharField(max_length=25)),
                ('concealment', models.CharField(choices=[('T', 'Tiny'), ('S', 'Small'), ('L', 'Large'), ('N', 'Cannot hide')], max_length=1)),
                ('is_elder', models.BooleanField(default=False)),
                ('damage', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='character.diceroll')),
                ('effects', models.ManyToManyField(to='character.effect')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WeaponOwnership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.character')),
                ('weapon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.weapon')),
            ],
        ),
        migrations.CreateModel(
            name='ToolKitOwnership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.character')),
                ('tool_kit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.toolkit')),
            ],
        ),
        migrations.CreateModel(
            name='StatisticOwnership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.character')),
                ('statistic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.statistic')),
            ],
        ),
        migrations.CreateModel(
            name='SocialStanding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(choices=[('equal', 'Equal'), ('tolerated', 'Tolerated'), ('feared', 'Feared'), ('hated', 'Hated')], max_length=50)),
                ('region', models.CharField(choices=[('north', 'The North'), ('nilfgaard', 'Nilfgaard'), ('skellige', 'Skellige'), ('dol_blathanna', 'Dol Blathanna'), ('mahakam', 'Mahakam')], max_length=50)),
                ('impacts', models.ManyToManyField(to='character.impact')),
            ],
        ),
        migrations.CreateModel(
            name='SkillOwnership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.character')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.skill')),
            ],
        ),
        migrations.AddField(
            model_name='skill',
            name='statistic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.statistic'),
        ),
        migrations.CreateModel(
            name='RegionStanding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(choices=[('north', 'The North'), ('nilfgaard', 'Nilfgaard'), ('skellige', 'Skellige'), ('dol_blathanna', 'Dol Blathanna'), ('mahakam', 'Mahakam')], max_length=50)),
                ('races', models.ManyToManyField(related_name='social_standings', to='character.race')),
                ('social_standings', models.ManyToManyField(to='character.socialstanding')),
            ],
        ),
        migrations.CreateModel(
            name='RacePerk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('impacts', models.ManyToManyField(to='character.impact')),
            ],
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('starting_vigor', models.IntegerField()),
                ('starting_novice_spells', models.IntegerField()),
                ('starting_novice_invocations', models.IntegerField()),
                ('starting_novice_rituals', models.IntegerField()),
                ('starting_low_danger_hexes', models.IntegerField()),
                ('defining_skill', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='character.definingskill')),
                ('starting_armor', models.ManyToManyField(to='character.armor')),
                ('starting_gear', models.ManyToManyField(to='character.gear')),
                ('starting_skills', models.ManyToManyField(to='character.skill')),
                ('starting_weapons', models.ManyToManyField(to='character.weapon')),
            ],
        ),
        migrations.CreateModel(
            name='GearOwnership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.character')),
                ('gear', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.gear')),
            ],
        ),
        migrations.AddField(
            model_name='effect',
            name='impacts',
            field=models.ManyToManyField(to='character.impact'),
        ),
        migrations.AddField(
            model_name='definingskill',
            name='statistic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.statistic'),
        ),
        migrations.AddField(
            model_name='character',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.country'),
        ),
        migrations.AddField(
            model_name='character',
            name='gear',
            field=models.ManyToManyField(related_name='characters', through='character.GearOwnership', to='character.gear'),
        ),
    ]
